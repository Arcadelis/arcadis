[package]
name = "soroban-ecs"
version = "0.1.0"
edition = "2021"
description = "Soroban-adapted Entity Component System for blockchain games"
license = "MIT OR Apache-2.0"
keywords = ["ecs", "game", "soroban", "blockchain"]
categories = ["game-engines", "data-structures"]
rust-version = "1.70.0"

[lib]
name = "soroban_ecs"
crate-type = ["rlib", "cdylib"]

[dependencies]
soroban-sdk = "23.0.1"
wee_alloc = "0.4.5"

# Core dependencies adapted for no_std
# alloc-crate = { package = "alloc", version = "0.1.0" }

# Remove std-dependent features and dependencies
# [features]
# default = ["std"]
# std = []

# Remove all the original Bevy dependencies that are not compatible with Soroban
# bevy_ptr = { path = "../bevy_ptr", version = "0.17.0-dev" }
# bevy_reflect = { path = "../bevy_reflect", version = "0.17.0-dev", features = ["smallvec"], default-features = false, optional = true }
# bevy_tasks = { path = "../bevy_tasks", version = "0.17.0-dev", default-features = false }
# bevy_utils = { path = "../bevy_utils", version = "0.17.0-dev", default-features = false }
# bevy_ecs_macros = { path = "macros", version = "0.17.0-dev" }
# bevy_platform = { path = "../bevy_platform", version = "0.17.0-dev", default-features = false, features = ["alloc"] }

# bitflags = { version = "2.3", default-features = false }
# fixedbitset = { version = "0.5", default-features = false }
# serde = { version = "1", default-features = false, features = ["alloc", "serde_derive"], optional = true }
# thiserror = { version = "2", default-features = false }
# derive_more = { version = "2", default-features = false, features = ["from", "display", "into", "as_ref"] }
# nonmax = { version = "0.5", default-features = false }
# arrayvec = { version = "0.7.4", default-features = false, optional = true }
# smallvec = { version = "1", features = ["union", "const_generics"] }
# indexmap = { version = "2.5.0", default-features = false }
# variadics_please = { version = "1.1", default-features = false }
# tracing = { version = "0.1", default-features = false, optional = true }
# log = { version = "0.4", default-features = false }
# bumpalo = "3"
# subsecond = { version = "0.7.0-alpha.1", optional = true }
# slotmap = { version = "1.0.7", default-features = false }

# concurrent-queue = { version = "2.5.0", default-features = false }
# [target.'cfg(not(all(target_has_atomic = "8", target_has_atomic = "16", target_has_atomic = "32", target_has_atomic = "64", target_has_atomic = "ptr")))'.dependencies]
# concurrent-queue = { version = "2.5.0", default-features = false, features = ["portable-atomic"] }

# [dev-dependencies]
# rand = "0.8"
# static_assertions = "1.1.0"
# serde_test = "1.0"

# [[example]]
# name = "events"
# path = "examples/events.rs"

# [[example]]
# name = "resources"
# path = "examples/resources.rs"

# [[example]]
# name = "change_detection"
# path = "examples/change_detection.rs"

# [lints]
# workspace = true

# [package.metadata.docs.rs]
# rustdoc-args = ["-Zunstable-options", "--generate-link-to-definition"]
# all-features = true
